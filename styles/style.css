
/*

:root {

	--background-color: white;
	--text-color: black;
	--primary-button: green;
	--secondary-button: rgb(0, 108, 0);
	--accent: magenta;
	/*Adding some variables in for me - cam 
	--clr--primary: #304ffe;
	--clr--primary-hover: #29e6a7;
	--clr--primary-dark: #039d69;
	--clr--gray100: #f0f7f8;
	--clr--gray200: #cfd8dc;
	--clr--gray400: #6b7e86;
	--clr--red100: rgb(255, 17, 0);

	/*border raiuds-cam
	--radius: 0.2rem;
    --background-color: white;
    --text-color: black;
    --primary-button: green;
    --secondary-button: rgb(0, 108, 0);
    --accent: magenta;
    --clr-primary: #304FFE;
    --clr-primary-hover: #29E6A7;
    --clr-primary-dark: #039D69;
    --clr-gray100: #F0F7F8;
    --clr-gray200: #CFD8DC;
    --clr-gray400: #6B7E86;
    --clr-black: black;
    /*border raiuds-cam*/
    --radius: 0.2rem;

}

header,
footer {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
}


.main-grid {

	display: grid;
	grid-template-columns: 1fr;
	grid-auto-rows: minmax(300px, auto); /* Dan's code Set new rows to either 300px height if possible, or else to fit content 
	grid-auto-flow: dense; /* Unused space? Fill it with 1x1 articles 
	/*cams code below for grid
	grid-gap: 1.5rem;
	justify-content: center;

    display: grid;
    grid-template-columns: 1fr;
    grid-auto-rows: minmax(300px, auto); /* Set new rows to either 300px height if possible, or else to fit content */
    grid-auto-flow: dense; /* Unused space? Fill it with 1x1 articles */

}

.main-grid .grid-2x1 {
    grid-column-end: span 2;
}
.main-grid .grid-1x2 {

	grid-row-end: span 2;
}
.grid-item-1 {
	display: grid;
	overflow: hidden;
	grid-row: span 1;
	border: 1px solid var(--clr--gray200);
	box-shadow: 4px 4px var(--clr--gray200);
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	cursor: pointer;
	transition: border 200ms ease-in, box-shadow 200ms ease-in;
	&:hover {
		border: 1px solid var(--clr-primary);
		box-shadow: 8px 8px var(--clr--primary-hover);
	}
}
.grid-item-5 {
	display: grid;
	overflow: hidden;
	grid-row: span 1;
	border: 1px solid var(--clr--gray200);
	box-shadow: 4px 4px var(--clr--gray200);
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	cursor: pointer;
	transition: border 200ms ease-in, box-shadow 200ms ease-in;
	&:hover {
		border: 1px solid var(--clr-primary);
		box-shadow: 8px 8px var(--clr--primary-hover);
	}
}
.grid-item-3 {
	display: grid;
	overflow: hidden;

	grid-row: span 1;
	border: 1px solid var(--clr--gray200);
	box-shadow: 4px 4px var(--clr--gray200);
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	cursor: pointer;
	transition: border 200ms ease-in, box-shadow 200ms ease-in;
	&:hover {
		border: 1px solid var(--clr-primary);
		box-shadow: 8px 8px var(--clr--primary-hover);
	}
}
.grid-item-2 {
	display: grid;
	overflow: hidden;
	grid-column: 1;
	grid-row: span 1;
	border: 1px solid var(--clr--gray200);
	box-shadow: 4px 4px var(--clr--gray200);
	display: flex;
	flex-direction: column;
	justify-content: space-between;
	cursor: pointer;
	transition: border 200ms ease-in, box-shadow 200ms ease-in;
	&:hover {
		border: 1px solid var(--clr-primary);
		box-shadow: 8px 8px var(--clr--primary-hover);
	}
}
/*down below is what i used for the arrow animation

.main-grid a {
	padding: 1rem;
	font-weight: bold;
	color: var(--clr--primary);

	&::after {
		content: '\f061';
		font-family: 'Font Awesome 5 free';
		font-weight: 900;
		position: relative;
		left: 0.5rem;
	}
}

.card-link {
	&:hover::after {
		animation: arrow 1s ease-in-out infinite alternate;
	}
}
@keyframes arrow {
	0% {
		left: 0.5rem;
	}
	100% {
		left: 1.5rem;
	}
}

.card-image {
	height: 12rem;
	width: 100%;
	object-fit: cover;
}
.card-title {
	padding: 1rem;
	text-align: center;
}
.card-description {
	padding: 0 1rem;
}

.card {
	/*work in progress will come back to it later check gpt histoy
	display: flex;
	flex-wrap: wrap;
}

.card a {
	color: black;
	display: flex;
	flex-wrap: wrap;
	flex-direction: row;
	flex: 1;
	padding: 0.5rem 1rem;
}
.zero {
	align-items: center;
	display: flex;
	flex-wrap: wrap;
	flex-direction: column;
	background-color: rgba(223, 216, 216, 0.74);
}
.arts {
	text-align: center;
}
.footer-left {
	display: flex;
	flex-wrap: wrap;
}
.svg-group {
	display: flex;
	flex-direction: row;
	flex-wrap: wrap;
	align-items: center;
	background-color: rgba(223, 216, 216, 0.74);
}
.svg-group svg:not(:first-child) {
	margin-right: 2px;
	margin-left: 1px; /* Adjusting the size for logos 
}
.svg-group .icon1 {
	fill: rgb(0, 92, 212);
	stroke: rgb(214, 214, 255);
}

.svg-group .icon2 {
	fill: rgb(13, 117, 253);
	stroke: rgb(214, 214, 255);

    grid-row-end: span 2;
}

.weather-panel {
    background-color: var(--background-color);
    position: relative;
}

.weather-card {
    display: flex;
    flex-direction: column;
    align-items: center;
    width: 100%;
    border: solid 1px black;
    padding-bottom: 15px;
    background-color: beige;
    z-index: 16;
    position: relative;
    border-radius: var(--radius);
}

.weather-card div {
    width: 80%;
}

.weekday {
    font-weight: bold;
    font-size: 2rem;
    margin: 10px 0;
}

.weather-image-wrapper {
    padding: 1rem 4rem;
    border: solid 1px black;
    background-color: lightskyblue;
    border-radius: var(--radius);
}

.weather-info {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    font-size: 1.2rem;
}

.temperature {
    display: flex;
}

.temperature p{
    font-weight: bold;
    font-size: 3rem;
    display: inline;
    margin:0 10px 0 0;
}

.temperature button {
    width: 55px;
    height: 50px;
    margin-right: 10px;
    padding: 0 20px 0 10px;
    border-radius: var(--radius);
}

.degree-active {
    background-color: var(--clr-gray200);
}

.degree-inactive{
    background-color: whitesmoke;
}


.weekday-menu {
    display: flex;
    flex-direction: column;
    width: 100%;
    z-index: 1;
    transform: translateY(-362px);
    position: relative;
    transition: all 0.5s ease-in-out;
}

.weekday-menu.expanded {
    transform: translateY(0px);
}

.expand.expanded img {
    transform: rotate(180deg);
    transition: all 0.5s linear;

}

.expand img {
    transition: all 0.5s linear;
}


.weather-tab {
    display: flex;
    border: solid 1px black;
    width: 100%;
    justify-content: space-between;
    align-items: center;
    background-color: var(--clr-gray100);
}

.weather-tab p {
    font-size: 2rem;
    margin:0 0 0 20px;
}

.weather-tab img {
    margin-right: 30px;
}



.expand {
    width: 100%;
    border: solid 1px black;
    text-align: center;
    background-color: whitesmoke;
    order: 30;
    border-radius: var(--radius);
}

.expand:active {
    background-color: lightgray;
}

.capitalize {
    text-transform: capitalize;
}


/*only way to get ride of text decoration? tried doing it the normal way but it didnt work
a:link {
	text-decoration: none !important;
}

@media (min-width: 20em) {
	.main-grid {
		grid-template-columns: repeat(1, 4fr);
	}
	.card {
		align-items: center;
		justify-content: center;
	}
	.grid-item-1 {
		grid-column: 1;
	}
	.grid-item-2 {
		grid-column: 1;
	}
	.grid-item-3 {
		grid-column: 1;
	}
	.grid-item-4 {
		grid-column: 1;
	}
	.grid-item-5 {
		grid-column: 1;
	}
}
/*making b bold size bigger
b {
	font-size: 18px;
}

@media (min-width: 40em) {
	.main-grid {
		grid-template-columns: repeat(3, 1fr);
	}

	.card {
		align-items: center;
		/* justify-content: center; 
		display: flex;
		flex-flow: row-reverse;
	}
	.grid-item-1 {
		grid-column: 1;
	}
	.grid-item-2 {
		grid-column: 2;
	}
	.grid-item-3 {
		grid-column: 3;
	}
	.grid-item-4 {
		grid-column: 3;
	}
	.grid-item-5 {
		grid-column: 2;
	}
=======
.trending {
    position: absolute;
    top: 370px;
}

.trending h3 {
    font-size: 1.3rem;
    margin: 0 0 0 5px;
}

.trending-article {
    display: grid;
    grid-template-columns: 30px repeat(2, 1fr);
    grid-template-rows: 1fr 0.5fr;
    border-bottom: solid 1px black;
    margin-top: 5px;
}

.trending-article p,
.trending-article a {
    margin: 0 20px 10px 5px;
}

.trending .numbering {

    grid-row: 1/3;
    font-weight: bold;
    font-size: 1.5rem;
    margin: 5px 5px 10px 7px;
}

.trending .headline {
    font-weight: bold;
    grid-column: 2/4;
    margin-top: 5px;
    color: var(--text-color);
    text-decoration: none;
}

.trending .headline:hover {
    text-decoration: underline;
}

.trending .views {
    color: var(--clr-gray400);
}

@media (min-width: 20em) {
    .main-grid {
        grid-template-columns: repeat(2, 1fr);
    }
}

@media (min-width: 40em) {
    .main-grid {
        grid-template-columns: repeat(3, 1fr);
    }

}

@media (min-width: 60em) {
    .main-grid {
        grid-template-columns: repeat(4, 1fr);
    }
}

@media (min-width: 80em) {
    .main-grid {
        grid-template-columns: repeat(5, 1fr);
    }
}

@media (min-width: 100em) {
    .main-grid {
        grid-template-columns: repeat(6, 1fr);
    }
}
*/